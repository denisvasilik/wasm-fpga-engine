TEST_WASM_FPGA_ENGINE:
BEGIN_SUB
    MESSAGE 2 "TEST_WASM_FPGA_ENGINE"

    CALL $TEST_WASM_FPGA_ENGINE_BUSY_FLAG
    CALL $TEST_I32_CTZ
    CALL $TEST_I32_CLZ
    CALL $TEST_I32_CONST
    CALL $TEST_I32_AND
    CALL $TEST_I32_POPCNT
    CALL $TEST_I32_OR
    CALL $TEST_DROP
    CALL $TEST_I32_XOR
    CALL $TEST_I32_SHL
    CALL $TEST_I32_SHR_S
    -- CALL $TEST_I32_SHR_U
    -- CALL $TEST_I32_ROTL
    -- CALL $TEST_I32_ROTR

    RETURN_CALL
END_SUB


TEST_WASM_FPGA_ENGINE_BUSY_FLAG:
BEGIN_SUB
    MESSAGE 0 "TEST_WASM_FPGA_ENGINE_BUSY_FLAG"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_END

    VERIFY_FPGA 32 $ENGINEBLK_ADR_StatusReg WB_VALUE $ENGINEBLK_VAL_IsNotBusy $ENGINEBLK_BUS_MASK_Busy

    CALL $RUN_WASM_FPGA_ENGINE

    VERIFY_FPGA 32 $ENGINEBLK_ADR_StatusReg WB_VALUE $ENGINEBLK_VAL_IsBusy $ENGINEBLK_BUS_MASK_Busy

    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_FPGA 32 $ENGINEBLK_ADR_StatusReg WB_VALUE $ENGINEBLK_VAL_IsNotBusy $ENGINEBLK_BUS_MASK_Busy

    RETURN_CALL
END_SUB


TEST_I32_CONST:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_CONST"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x35
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x35 #xFF

    RETURN_CALL
END_SUB


TEST_I32_CTZ:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_CTZ"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x78
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CTZ
    WRITE_RAM $WASM_MODULE #x1D $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x03 #xFF

    RETURN_CALL
END_SUB


TEST_I32_CLZ:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_CLZ"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x18
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CLZ
    WRITE_RAM $WASM_MODULE #x1D $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x1B #xFF

    RETURN_CALL
END_SUB



TEST_I32_AND:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_AND"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x03
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x05
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_AND
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x1 #xFF

    RETURN_CALL
END_SUB


TEST_I32_OR:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_OR"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x05
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x0A
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_OR
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #xF #xFF

    RETURN_CALL
END_SUB


TEST_I32_POPCNT:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_POPCNT"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x3F
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_POPCNT
    WRITE_RAM $WASM_MODULE #x1D $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x6 #xFF

    RETURN_CALL
END_SUB

TEST_DROP:
BEGIN_SUB
    MESSAGE 0 "TEST_DROP"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x01
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x02
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1F #x03
    WRITE_RAM $WASM_MODULE #x20 $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x21 #x04
    WRITE_RAM $WASM_MODULE #x22 $WASM_OPCODE_DROP
    WRITE_RAM $WASM_MODULE #x23 $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_SIG $SIG_STACK_SIZE TMP_VAL #x4 #xF

    RETURN_CALL
END_SUB


TEST_I32_XOR:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_XOR"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x05
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x0A
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_XOR
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x0F #xFF

    RETURN_CALL
END_SUB


TEST_I32_SHL:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_SHL"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x08
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x03
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_SHL
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x40 #xFF

    RETURN_CALL
END_SUB


TEST_I32_SHR_S:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_SHR_S"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x7F
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x02
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_SHR_S
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #xFFFFFFFF #xFF

    RETURN_CALL
END_SUB


TEST_I32_SHR_U:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_SHR_U"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x02
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x08
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_SHR_U
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x02 #xFF

    RETURN_CALL
END_SUB


TEST_I32_ROTL:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_ROTL"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x0A
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x05
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_ROTL
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x0F #xFF

    RETURN_CALL
END_SUB


TEST_I32_ROTR:
BEGIN_SUB
    MESSAGE 0 "TEST_I32_ROTR"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x0A
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x05
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_ROTR
    WRITE_RAM $WASM_MODULE #x1F $WASM_OPCODE_END

    CALL $RUN_WASM_FPGA_ENGINE
    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Note: The stack initially holds a value for the activation frame.
    VERIFY_RAM $WASM_STACK #x1 TMP_VAL #x0F #xFF

    RETURN_CALL
END_SUB