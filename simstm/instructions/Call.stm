TEST_CALL:
BEGIN_SUB
    MESSAGE 0 "TEST_CALL"

    CALL $TEST_CALL_TWO_PARAMS

    RETURN_CALL
END_SUB

-- WAT:
--
-- (module
--     (func $my_func (param $a i32) (param $b i32)
--         get_local $a
--         get_local $b
--         i32.sub
--         drop)

--     (func $main
--         i32.const 3
--         i32.const 4
--         call $my_func)

--     (start $main)
-- )
--
TEST_CALL_TWO_PARAMS:
BEGIN_SUB
    MESSAGE 0 "TEST_CALL_TWO_PARAMS"

    CALL $RESET_WASM_FPGA_ENGINE

    -- Prepare store to provide a start section entry
    WRITE_RAM $WASM_STORE #x0 #x0 -- Module Instance UID
    WRITE_RAM $WASM_STORE #x1 #x8 -- Section UID of Start Section
    WRITE_RAM $WASM_STORE #x2 #x0 -- Idx
    WRITE_RAM $WASM_STORE #x3 #x19 -- Start Function Address

    -- Prepare store to provide a start function address
    WRITE_RAM $WASM_STORE #x4 #x0 -- Module Instance UID
    WRITE_RAM $WASM_STORE #x5 #xA -- Section UID of Code Section
    WRITE_RAM $WASM_STORE #x6 #x01 -- Idx
    WRITE_RAM $WASM_STORE #x7 #x27 -- Start Function Address

    -- Prepare store to provide a start function address
    WRITE_RAM $WASM_STORE #x8 #x0 -- Module Instance UID
    WRITE_RAM $WASM_STORE #x9 #xA -- Section UID of Code Section
    WRITE_RAM $WASM_STORE #xA #x00 -- Idx
    WRITE_RAM $WASM_STORE #xB #x1E -- Start Function Address

    -- Prepare store to provide function section address in order to figure out
    -- the functions type index
    WRITE_RAM $WASM_STORE #xC #x0 -- Module Instance UID
    WRITE_RAM $WASM_STORE #xD #x3 -- Section UID of Function Section
    WRITE_RAM $WASM_STORE #xE #x0 -- Idx
    WRITE_RAM $WASM_STORE #xF #x16 -- Type Idx Address

    -- Prepare store to provide type section address in order to check number of
    -- parameters
    WRITE_RAM $WASM_STORE #x10 #x0 -- Module Instance UID
    WRITE_RAM $WASM_STORE #x11 #x1 -- Section UID of Type Section
    WRITE_RAM $WASM_STORE #x12 #x0 -- Idx
    WRITE_RAM $WASM_STORE #x13 #x0C -- Function Type Address

    WRITE_RAM $WASM_MODULE #x000000 #x00
    WRITE_RAM $WASM_MODULE #x000001 #x61
    WRITE_RAM $WASM_MODULE #x000002 #x73
    WRITE_RAM $WASM_MODULE #x000003 #x6D
    WRITE_RAM $WASM_MODULE #x000004 #x01
    WRITE_RAM $WASM_MODULE #x000005 #x00
    WRITE_RAM $WASM_MODULE #x000006 #x00
    WRITE_RAM $WASM_MODULE #x000007 #x00
    WRITE_RAM $WASM_MODULE #x000008 #x01
    WRITE_RAM $WASM_MODULE #x000009 #x09
    WRITE_RAM $WASM_MODULE #x00000A #x02
    WRITE_RAM $WASM_MODULE #x00000B #x60
    WRITE_RAM $WASM_MODULE #x00000C #x02
    WRITE_RAM $WASM_MODULE #x00000D #x7F
    WRITE_RAM $WASM_MODULE #x00000E #x7F
    WRITE_RAM $WASM_MODULE #x00000F #x00
    WRITE_RAM $WASM_MODULE #x000010 #x60
    WRITE_RAM $WASM_MODULE #x000011 #x00
    WRITE_RAM $WASM_MODULE #x000012 #x00
    WRITE_RAM $WASM_MODULE #x000013 #x03
    WRITE_RAM $WASM_MODULE #x000014 #x03
    WRITE_RAM $WASM_MODULE #x000015 #x02
    WRITE_RAM $WASM_MODULE #x000016 #x00
    WRITE_RAM $WASM_MODULE #x000017 #x01
    WRITE_RAM $WASM_MODULE #x000018 #x08
    WRITE_RAM $WASM_MODULE #x000019 #x01
    WRITE_RAM $WASM_MODULE #x00001A #x01
    WRITE_RAM $WASM_MODULE #x00001B #x0A
    WRITE_RAM $WASM_MODULE #x00001C #x13
    WRITE_RAM $WASM_MODULE #x00001D #x02
    WRITE_RAM $WASM_MODULE #x00001E #x08
    WRITE_RAM $WASM_MODULE #x00001F #x00
    WRITE_RAM $WASM_MODULE #x000020 #x20
    WRITE_RAM $WASM_MODULE #x000021 #x00
    WRITE_RAM $WASM_MODULE #x000022 #x20
    WRITE_RAM $WASM_MODULE #x000023 #x01
    WRITE_RAM $WASM_MODULE #x000024 #x6B
    WRITE_RAM $WASM_MODULE #x000025 #x1A
    WRITE_RAM $WASM_MODULE #x000026 #x0B
    WRITE_RAM $WASM_MODULE #x000027 #x08
    WRITE_RAM $WASM_MODULE #x000028 #x00
    WRITE_RAM $WASM_MODULE #x000029 #x41
    WRITE_RAM $WASM_MODULE #x00002A #x03
    WRITE_RAM $WASM_MODULE #x00002B #x41
    WRITE_RAM $WASM_MODULE #x00002C #x04
    WRITE_RAM $WASM_MODULE #x00002D #x10
    WRITE_RAM $WASM_MODULE #x00002E #x00
    WRITE_RAM $WASM_MODULE #x00002F #x0B

    CALL $RUN_WASM_FPGA_ENGINE

    WAIT_NS 100000

    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    RETURN_CALL
END_SUB