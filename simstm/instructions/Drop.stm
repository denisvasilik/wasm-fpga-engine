TEST_DROP:
BEGIN_SUB
    MESSAGE 0 "TEST_DROP"

    CALL $RESET_WASM_FPGA_ENGINE

    WRITE_RAM $WASM_MODULE #x1A $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1B #x01
    WRITE_RAM $WASM_MODULE #x1C $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1D #x02
    WRITE_RAM $WASM_MODULE #x1E $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x1F #x03
    WRITE_RAM $WASM_MODULE #x20 $WASM_OPCODE_I32_CONST
    WRITE_RAM $WASM_MODULE #x21 #x04
    WRITE_RAM $WASM_MODULE #x22 $WASM_OPCODE_DROP
    WRITE_RAM $WASM_MODULE #x23 $WASM_OPCODE_END

    EQU_VAR WASM_BREAKPOINT0 #x000023
    CALL $DEBUG_WASM_FPGA_ENGINE

    CALL $WAIT_UNTIL_ENGINE_IS_IDLE

    -- Check stack after initial stack frame
    VERIFY_RAM $WASM_STACK #x6 WB_VALUE #x00000001 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #x7 WB_VALUE #x00000000 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #x8 WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #x9 WB_VALUE #x00000002 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #xA WB_VALUE #x00000000 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #xB WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #xC WB_VALUE #x00000003 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #xD WB_VALUE #x00000000 #xFFFFFFFF
    VERIFY_RAM $WASM_STACK #xE WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF

    VERIFY_FPGA $WASM_DEBUG $ENGINEDEBUGBLK_ADR_StackAddressReg WB_VALUE #xF #xFFFFFFFF

    RETURN_CALL
END_SUB